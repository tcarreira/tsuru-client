name: Go
on: [push, pull_request]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:

    - uses: actions/setup-go@v1
      with:
        go-version: 1.16

    - uses: actions/checkout@v1

    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...
      shell: bash

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      if: matrix.os == 'ubuntu-latest'

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v1
      with:
        go-version: 1.16
    - uses: actions/checkout@v1
    - run: make metalint

  docker_deploy:
    name: "publish image on dockerhub"
    if: github.event_name != 'pull_request'
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - uses: docker/metadata-action@v4
      id: smarttag
      with:
        images: tsuru/client
        tags: |
          type=match,value=latest,pattern=\d.\d.\d
          type=edge,enable={{is_default_branch}}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=ref,event=pr,value=pr-{{branch}}

    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile
        push: true
        tags: ${{ steps.smarttag.outputs.tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

  deploy:
    if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/')
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v1
      with:
        go-version: 1.16
    - uses: actions/checkout@v1

    - name: stable release
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
      env:
        GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

    - uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.5'

    - name: packagecloud
      env:
        PACKAGE_NAME: tsuru-client
        PACKAGECLOUD_TOKEN: ${{secrets.PACKAGECLOUD_TOKEN}}
        SKIP_GORELEASER: "true"
      run: |
        curl -sL https://raw.githubusercontent.com/tsuru/push-to-packagecloud/master/push.sh | bash
